{
	"info": {
		"_postman_id": "b564b476-c18e-4891-99b1-df48fbdfe0f0",
		"name": "02-card-dealership",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7508044"
	},
	"item": [
		{
			"name": "populateBD - Esto lo primero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/seed",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"seed"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllCars - Lo primero de Cars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test('Validate getAllCars Successfully', () => {",
							"    pm.response.to.have.status(200);",
							"",
							"    pm.collectionVariables.set('carId', jsonData[0].id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "getCarById",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/cars/{{carId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "createCar",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "brand",
							"value": "Volvo",
							"type": "text"
						},
						{
							"key": "model",
							"value": "XC40",
							"type": "text"
						},
						{
							"key": "banana",
							"value": "si",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateCar",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "brand",
							"value": "Toyota2",
							"type": "text",
							"disabled": true
						},
						{
							"key": "model",
							"value": "Corolla2",
							"type": "text"
						},
						{
							"key": "id",
							"value": "{{carId}}",
							"type": "text"
						},
						{
							"key": "id",
							"value": "1d9606ce-4824-4c48-a98c-e1fe3641046e",
							"description": "UUID VALIDO PERO DISTINTO AL DE LA URL. ERROR",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/cars/{{carId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteCar",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/cars/{{carId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllBrands - Lo primero de Brands",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test('Validate getAllBrands Successfully', () => {",
							"    pm.response.to.have.status(200);",
							"",
							"    pm.collectionVariables.set('brandId', jsonData[0].id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/brands",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"brands"
					]
				}
			},
			"response": []
		},
		{
			"name": "getBrandById",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/brands/{{brandId}}",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"brands",
						"{{brandId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "createBrand",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Honda\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/brands",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"brands"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateBrand",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"volvo_2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/brands/{{brandId}}",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"brands",
						"{{brandId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteBrand",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:3000/brands/{{brandId}}",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"brands",
						"{{brandId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "carId",
			"value": "",
			"type": "string"
		},
		{
			"key": "brandId",
			"value": "",
			"type": "string"
		}
	]
}